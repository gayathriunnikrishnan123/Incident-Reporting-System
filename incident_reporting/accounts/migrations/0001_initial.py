# Generated by Django 4.2 on 2025-06-23 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('masterdata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fullname', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('default_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='masterdata.department')),
                ('default_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='masterdata.division')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'CustomUserProfile',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('function_name', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Audit_Log',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url_name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('level', models.IntegerField(default=1)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Role_Group',
            },
        ),
        migrations.CreateModel(
            name='DepartmentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='masterdata.department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='masterdata.division')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Department_Profile',
            },
        ),
        migrations.CreateModel(
            name='RoleMenuMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.menu')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
            ],
            options={
                'unique_together': {('role', 'menu')},
            },
        ),
        migrations.AddConstraint(
            model_name='departmentprofile',
            constraint=models.UniqueConstraint(condition=models.Q(('department__isnull', True), ('division__isnull', True)), fields=('user', 'role'), name='user already exist with same role and null division, department'),
        ),
        migrations.AddConstraint(
            model_name='departmentprofile',
            constraint=models.UniqueConstraint(condition=models.Q(('department__isnull', True)), fields=('user', 'division', 'role'), name='Unique User-division-role'),
        ),
        migrations.AddConstraint(
            model_name='departmentprofile',
            constraint=models.UniqueConstraint(condition=models.Q(('division__isnull', True)), fields=('user', 'department', 'role'), name='Unique User-department-role'),
        ),
        migrations.AddConstraint(
            model_name='departmentprofile',
            constraint=models.UniqueConstraint(fields=('user', 'division', 'department', 'role'), name='Already exist'),
        ),
    ]
